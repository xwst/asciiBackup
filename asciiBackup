#!/bin/bash

function print_help() {
	echo "help info"
}

function print_usage() {
	echo "usage info"
}

function set_hash() {
	if [[ $HASHFUNC ]]; then
		echo "Only one hash function may be specified."
		exit 1
	fi
	HASHFUNC=$1
}

function set_enc() {
	if [[ $ENCFUNC ]]; then
		echo "Only one encoding may be specified."
		exit 1
	fi
	ENCFUNC=$1
}

function is_integer() {
	case $1 in
		''|*[!0-9]*)
			return 1
			;;
		*)
			return 0
			;;
	esac
}

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
	-h|--help)
		print_help
		exit 0
		;;
	-u|--usage)
		print_usage
		exit 0
		;;
	-i|--input)
		INPUT="$2"
		shift
		shift
		;;
	-x|--hex)
		set_enc "xxd -p"
		shift
		;;
	-B|--base64)
		set_enc "base64"
		shift
		;;
	-b|--base32)
		set_enc "base32"
		shift
		;;
	-e|--encoding)
		set_enc "$2"
		shift
		shift
		;;
	-m|--md5)
		set_hash "md5sum"
		shift
		;;
	-s|--sha1)
		set_hash "sha1sum"
		shift
		;;
	-S|--sha512)
		set_hash "sha512sum"
		shift
		;;
	-H|--hash)
		set_hash "$2"
		shift
		shift
		;;
	-c|--columns)
		if [[ $COLS ]]; then
			echo "You must not specify the number of columns more than once."
			exit 1
		fi
		if is_integer $2; then
			COLS=$2
		else
			echo "'$2' is not a valid integer."
			exit 1
		fi
		shift
		shift
		;;
	-g|--group-size)
		if [[ $GROUPSIZE ]]; then
			echo "Error: Ambigious specification of group size."
			exit 1
		fi
		if is_integer $2; then
			GROUPSIZE=$2
		else
			echo "'$2' is not a valid integer."
			exit 1
		fi
		shift
		shift
		;;
	*) # positional argument or unknown option
		if [[ "${1:0:1}" == "-" ]]; then
			echo "Unknown option '$1'."
			exit 1
		fi
		if [[ ! -z $OUTFILE ]]; then # output file already set. Aborting...
			echo "Only one output file is allowed. Aborting..."
			exit 2
		fi
		OUTFILE="$1"
		shift
		;;
esac
done

## Default values:
if [[ ! $HASHFUNC ]]; then
	HASHFUNC="sha1sum"
fi
if [[ ! $ENCFUNC ]]; then
	ENCFUNC="xxd -p"
fi
if [[ ! $COLS ]]; then
	COLS=36
fi
if [[ ! $GROUPSIZE ]]; then
	GROUPSIZE=6
fi
